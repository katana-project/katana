// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"
	"time"

	"github.com/go-faster/errors"
)

// Ref: #/components/schemas/CastMember
type CastMember struct {
	// The cast member name.
	Name string `json:"name"`
	// The cast character name or the member's position.
	Role string `json:"role"`
	// The image of the cast member.
	Image OptImage `json:"image"`
}

// GetName returns the value of Name.
func (s *CastMember) GetName() string {
	return s.Name
}

// GetRole returns the value of Role.
func (s *CastMember) GetRole() string {
	return s.Role
}

// GetImage returns the value of Image.
func (s *CastMember) GetImage() OptImage {
	return s.Image
}

// SetName sets the value of Name.
func (s *CastMember) SetName(val string) {
	s.Name = val
}

// SetRole sets the value of Role.
func (s *CastMember) SetRole(val string) {
	s.Role = val
}

// SetImage sets the value of Image.
func (s *CastMember) SetImage(val OptImage) {
	s.Image = val
}

// Merged schema.
// Ref: #/components/schemas/EpisodeMetadata
type EpisodeMetadata struct {
	// The media title.
	Title string `json:"title"`
	// The media title as it was initially released (original language).
	OriginalTitle NilString `json:"original_title"`
	// The media plot overview.
	Overview NilString `json:"overview"`
	// The media initial release date and time.
	ReleaseDate time.Time `json:"release_date"`
	// The media like/dislike ratio.
	VoteRating float64 `json:"vote_rating"`
	// The promotional images of the media.
	Images []Image `json:"images"`
	// The parent series of the episode.
	Series SeriesMetadata `json:"series"`
	// The season containing the episode.
	Season int `json:"season"`
	// The episode number.
	Episode int `json:"episode"`
}

// GetTitle returns the value of Title.
func (s *EpisodeMetadata) GetTitle() string {
	return s.Title
}

// GetOriginalTitle returns the value of OriginalTitle.
func (s *EpisodeMetadata) GetOriginalTitle() NilString {
	return s.OriginalTitle
}

// GetOverview returns the value of Overview.
func (s *EpisodeMetadata) GetOverview() NilString {
	return s.Overview
}

// GetReleaseDate returns the value of ReleaseDate.
func (s *EpisodeMetadata) GetReleaseDate() time.Time {
	return s.ReleaseDate
}

// GetVoteRating returns the value of VoteRating.
func (s *EpisodeMetadata) GetVoteRating() float64 {
	return s.VoteRating
}

// GetImages returns the value of Images.
func (s *EpisodeMetadata) GetImages() []Image {
	return s.Images
}

// GetSeries returns the value of Series.
func (s *EpisodeMetadata) GetSeries() SeriesMetadata {
	return s.Series
}

// GetSeason returns the value of Season.
func (s *EpisodeMetadata) GetSeason() int {
	return s.Season
}

// GetEpisode returns the value of Episode.
func (s *EpisodeMetadata) GetEpisode() int {
	return s.Episode
}

// SetTitle sets the value of Title.
func (s *EpisodeMetadata) SetTitle(val string) {
	s.Title = val
}

// SetOriginalTitle sets the value of OriginalTitle.
func (s *EpisodeMetadata) SetOriginalTitle(val NilString) {
	s.OriginalTitle = val
}

// SetOverview sets the value of Overview.
func (s *EpisodeMetadata) SetOverview(val NilString) {
	s.Overview = val
}

// SetReleaseDate sets the value of ReleaseDate.
func (s *EpisodeMetadata) SetReleaseDate(val time.Time) {
	s.ReleaseDate = val
}

// SetVoteRating sets the value of VoteRating.
func (s *EpisodeMetadata) SetVoteRating(val float64) {
	s.VoteRating = val
}

// SetImages sets the value of Images.
func (s *EpisodeMetadata) SetImages(val []Image) {
	s.Images = val
}

// SetSeries sets the value of Series.
func (s *EpisodeMetadata) SetSeries(val SeriesMetadata) {
	s.Series = val
}

// SetSeason sets the value of Season.
func (s *EpisodeMetadata) SetSeason(val int) {
	s.Season = val
}

// SetEpisode sets the value of Episode.
func (s *EpisodeMetadata) SetEpisode(val int) {
	s.Episode = val
}

// Ref: #/components/schemas/Error
type Error struct {
	// The error description.
	Description string `json:"description"`
}

// GetDescription returns the value of Description.
func (s *Error) GetDescription() string {
	return s.Description
}

// SetDescription sets the value of Description.
func (s *Error) SetDescription(val string) {
	s.Description = val
}

func (*Error) getRepoByIdRes()           {}
func (*Error) getRepoMediaByIdRes()      {}
func (*Error) getRepoMediaRawStreamRes() {}
func (*Error) getRepoMediaRes()          {}

type GetRepoMediaOKApplicationJSON []Media

func (*GetRepoMediaOKApplicationJSON) getRepoMediaRes() {}

type GetRepoMediaRawStreamOK struct {
	Data io.ReadCloser
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s GetRepoMediaRawStreamOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// Close closes the Data reader.
//
// Kept to satisfy the io.Closer interface.
func (s GetRepoMediaRawStreamOK) Close() error {
	if s.Data == nil {
		return nil
	}
	return s.Data.Close()
}

// GetRepoMediaRawStreamOKHeaders wraps GetRepoMediaRawStreamOK with response headers.
type GetRepoMediaRawStreamOKHeaders struct {
	ContentDisposition OptString
	Response           GetRepoMediaRawStreamOK
}

// GetContentDisposition returns the value of ContentDisposition.
func (s *GetRepoMediaRawStreamOKHeaders) GetContentDisposition() OptString {
	return s.ContentDisposition
}

// GetResponse returns the value of Response.
func (s *GetRepoMediaRawStreamOKHeaders) GetResponse() GetRepoMediaRawStreamOK {
	return s.Response
}

// SetContentDisposition sets the value of ContentDisposition.
func (s *GetRepoMediaRawStreamOKHeaders) SetContentDisposition(val OptString) {
	s.ContentDisposition = val
}

// SetResponse sets the value of Response.
func (s *GetRepoMediaRawStreamOKHeaders) SetResponse(val GetRepoMediaRawStreamOK) {
	s.Response = val
}

func (*GetRepoMediaRawStreamOKHeaders) getRepoMediaRawStreamRes() {}

// Ref: #/components/schemas/Image
type Image struct {
	// The image URL, a remote HTTP resource or raw data (data:image url).
	Path string `json:"path"`
	// Whether the image path is a remote URL.
	Remote bool `json:"remote"`
	// The image description.
	Description NilString `json:"description"`
}

// GetPath returns the value of Path.
func (s *Image) GetPath() string {
	return s.Path
}

// GetRemote returns the value of Remote.
func (s *Image) GetRemote() bool {
	return s.Remote
}

// GetDescription returns the value of Description.
func (s *Image) GetDescription() NilString {
	return s.Description
}

// SetPath sets the value of Path.
func (s *Image) SetPath(val string) {
	s.Path = val
}

// SetRemote sets the value of Remote.
func (s *Image) SetRemote(val bool) {
	s.Remote = val
}

// SetDescription sets the value of Description.
func (s *Image) SetDescription(val NilString) {
	s.Description = val
}

// Ref: #/components/schemas/Media
type Media struct {
	// The media ID, alphanumeric, lowercase, non-blank ([a-z0-9-_]).
	ID   string       `json:"id"`
	Meta NilMediaMeta `json:"meta"`
}

// GetID returns the value of ID.
func (s *Media) GetID() string {
	return s.ID
}

// GetMeta returns the value of Meta.
func (s *Media) GetMeta() NilMediaMeta {
	return s.Meta
}

// SetID sets the value of ID.
func (s *Media) SetID(val string) {
	s.ID = val
}

// SetMeta sets the value of Meta.
func (s *Media) SetMeta(val NilMediaMeta) {
	s.Meta = val
}

func (*Media) getRepoMediaByIdRes() {}

// MediaMeta represents sum type.
type MediaMeta struct {
	Type            MediaMetaType // switch on this field
	Metadata        Metadata
	MovieMetadata   MovieMetadata
	SeriesMetadata  SeriesMetadata
	EpisodeMetadata EpisodeMetadata
}

// MediaMetaType is oneOf type of MediaMeta.
type MediaMetaType string

// Possible values for MediaMetaType.
const (
	MetadataMediaMeta        MediaMetaType = "unknown"
	MovieMetadataMediaMeta   MediaMetaType = "movie"
	SeriesMetadataMediaMeta  MediaMetaType = "series"
	EpisodeMetadataMediaMeta MediaMetaType = "episode"
)

// IsMetadata reports whether MediaMeta is Metadata.
func (s MediaMeta) IsMetadata() bool { return s.Type == MetadataMediaMeta }

// IsMovieMetadata reports whether MediaMeta is MovieMetadata.
func (s MediaMeta) IsMovieMetadata() bool { return s.Type == MovieMetadataMediaMeta }

// IsSeriesMetadata reports whether MediaMeta is SeriesMetadata.
func (s MediaMeta) IsSeriesMetadata() bool { return s.Type == SeriesMetadataMediaMeta }

// IsEpisodeMetadata reports whether MediaMeta is EpisodeMetadata.
func (s MediaMeta) IsEpisodeMetadata() bool { return s.Type == EpisodeMetadataMediaMeta }

// SetMetadata sets MediaMeta to Metadata.
func (s *MediaMeta) SetMetadata(v Metadata) {
	s.Type = MetadataMediaMeta
	s.Metadata = v
}

// GetMetadata returns Metadata and true boolean if MediaMeta is Metadata.
func (s MediaMeta) GetMetadata() (v Metadata, ok bool) {
	if !s.IsMetadata() {
		return v, false
	}
	return s.Metadata, true
}

// NewMetadataMediaMeta returns new MediaMeta from Metadata.
func NewMetadataMediaMeta(v Metadata) MediaMeta {
	var s MediaMeta
	s.SetMetadata(v)
	return s
}

// SetMovieMetadata sets MediaMeta to MovieMetadata.
func (s *MediaMeta) SetMovieMetadata(v MovieMetadata) {
	s.Type = MovieMetadataMediaMeta
	s.MovieMetadata = v
}

// GetMovieMetadata returns MovieMetadata and true boolean if MediaMeta is MovieMetadata.
func (s MediaMeta) GetMovieMetadata() (v MovieMetadata, ok bool) {
	if !s.IsMovieMetadata() {
		return v, false
	}
	return s.MovieMetadata, true
}

// NewMovieMetadataMediaMeta returns new MediaMeta from MovieMetadata.
func NewMovieMetadataMediaMeta(v MovieMetadata) MediaMeta {
	var s MediaMeta
	s.SetMovieMetadata(v)
	return s
}

// SetSeriesMetadata sets MediaMeta to SeriesMetadata.
func (s *MediaMeta) SetSeriesMetadata(v SeriesMetadata) {
	s.Type = SeriesMetadataMediaMeta
	s.SeriesMetadata = v
}

// GetSeriesMetadata returns SeriesMetadata and true boolean if MediaMeta is SeriesMetadata.
func (s MediaMeta) GetSeriesMetadata() (v SeriesMetadata, ok bool) {
	if !s.IsSeriesMetadata() {
		return v, false
	}
	return s.SeriesMetadata, true
}

// NewSeriesMetadataMediaMeta returns new MediaMeta from SeriesMetadata.
func NewSeriesMetadataMediaMeta(v SeriesMetadata) MediaMeta {
	var s MediaMeta
	s.SetSeriesMetadata(v)
	return s
}

// SetEpisodeMetadata sets MediaMeta to EpisodeMetadata.
func (s *MediaMeta) SetEpisodeMetadata(v EpisodeMetadata) {
	s.Type = EpisodeMetadataMediaMeta
	s.EpisodeMetadata = v
}

// GetEpisodeMetadata returns EpisodeMetadata and true boolean if MediaMeta is EpisodeMetadata.
func (s MediaMeta) GetEpisodeMetadata() (v EpisodeMetadata, ok bool) {
	if !s.IsEpisodeMetadata() {
		return v, false
	}
	return s.EpisodeMetadata, true
}

// NewEpisodeMetadataMediaMeta returns new MediaMeta from EpisodeMetadata.
func NewEpisodeMetadataMediaMeta(v EpisodeMetadata) MediaMeta {
	var s MediaMeta
	s.SetEpisodeMetadata(v)
	return s
}

// Ref: #/components/schemas/Metadata
type Metadata struct {
	// The media title.
	Title string `json:"title"`
	// The media title as it was initially released (original language).
	OriginalTitle NilString `json:"original_title"`
	// The media plot overview.
	Overview NilString `json:"overview"`
	// The media initial release date and time.
	ReleaseDate time.Time `json:"release_date"`
	// The media like/dislike ratio.
	VoteRating float64 `json:"vote_rating"`
	// The promotional images of the media.
	Images []Image `json:"images"`
}

// GetTitle returns the value of Title.
func (s *Metadata) GetTitle() string {
	return s.Title
}

// GetOriginalTitle returns the value of OriginalTitle.
func (s *Metadata) GetOriginalTitle() NilString {
	return s.OriginalTitle
}

// GetOverview returns the value of Overview.
func (s *Metadata) GetOverview() NilString {
	return s.Overview
}

// GetReleaseDate returns the value of ReleaseDate.
func (s *Metadata) GetReleaseDate() time.Time {
	return s.ReleaseDate
}

// GetVoteRating returns the value of VoteRating.
func (s *Metadata) GetVoteRating() float64 {
	return s.VoteRating
}

// GetImages returns the value of Images.
func (s *Metadata) GetImages() []Image {
	return s.Images
}

// SetTitle sets the value of Title.
func (s *Metadata) SetTitle(val string) {
	s.Title = val
}

// SetOriginalTitle sets the value of OriginalTitle.
func (s *Metadata) SetOriginalTitle(val NilString) {
	s.OriginalTitle = val
}

// SetOverview sets the value of Overview.
func (s *Metadata) SetOverview(val NilString) {
	s.Overview = val
}

// SetReleaseDate sets the value of ReleaseDate.
func (s *Metadata) SetReleaseDate(val time.Time) {
	s.ReleaseDate = val
}

// SetVoteRating sets the value of VoteRating.
func (s *Metadata) SetVoteRating(val float64) {
	s.VoteRating = val
}

// SetImages sets the value of Images.
func (s *Metadata) SetImages(val []Image) {
	s.Images = val
}

// Ref: #/components/schemas/MetadataType
type MetadataType string

const (
	MetadataTypeUnknown MetadataType = "unknown"
	MetadataTypeMovie   MetadataType = "movie"
	MetadataTypeSeries  MetadataType = "series"
	MetadataTypeEpisode MetadataType = "episode"
)

// AllValues returns all MetadataType values.
func (MetadataType) AllValues() []MetadataType {
	return []MetadataType{
		MetadataTypeUnknown,
		MetadataTypeMovie,
		MetadataTypeSeries,
		MetadataTypeEpisode,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s MetadataType) MarshalText() ([]byte, error) {
	switch s {
	case MetadataTypeUnknown:
		return []byte(s), nil
	case MetadataTypeMovie:
		return []byte(s), nil
	case MetadataTypeSeries:
		return []byte(s), nil
	case MetadataTypeEpisode:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *MetadataType) UnmarshalText(data []byte) error {
	switch MetadataType(data) {
	case MetadataTypeUnknown:
		*s = MetadataTypeUnknown
		return nil
	case MetadataTypeMovie:
		*s = MetadataTypeMovie
		return nil
	case MetadataTypeSeries:
		*s = MetadataTypeSeries
		return nil
	case MetadataTypeEpisode:
		*s = MetadataTypeEpisode
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
// Ref: #/components/schemas/MovieMetadata
type MovieMetadata struct {
	// The media title.
	Title string `json:"title"`
	// The media title as it was initially released (original language).
	OriginalTitle NilString `json:"original_title"`
	// The media plot overview.
	Overview NilString `json:"overview"`
	// The media initial release date and time.
	ReleaseDate time.Time `json:"release_date"`
	// The media like/dislike ratio.
	VoteRating float64 `json:"vote_rating"`
	// The promotional images of the media.
	Images []Image `json:"images"`
	// The media's genres.
	Genres []string `json:"genres"`
	// The people casted in the media.
	Cast []CastMember `json:"cast"`
	// The languages originally spoken in the media.
	Languages []string `json:"languages"`
	// The countries that took part in producing the media.
	Countries []string `json:"countries"`
}

// GetTitle returns the value of Title.
func (s *MovieMetadata) GetTitle() string {
	return s.Title
}

// GetOriginalTitle returns the value of OriginalTitle.
func (s *MovieMetadata) GetOriginalTitle() NilString {
	return s.OriginalTitle
}

// GetOverview returns the value of Overview.
func (s *MovieMetadata) GetOverview() NilString {
	return s.Overview
}

// GetReleaseDate returns the value of ReleaseDate.
func (s *MovieMetadata) GetReleaseDate() time.Time {
	return s.ReleaseDate
}

// GetVoteRating returns the value of VoteRating.
func (s *MovieMetadata) GetVoteRating() float64 {
	return s.VoteRating
}

// GetImages returns the value of Images.
func (s *MovieMetadata) GetImages() []Image {
	return s.Images
}

// GetGenres returns the value of Genres.
func (s *MovieMetadata) GetGenres() []string {
	return s.Genres
}

// GetCast returns the value of Cast.
func (s *MovieMetadata) GetCast() []CastMember {
	return s.Cast
}

// GetLanguages returns the value of Languages.
func (s *MovieMetadata) GetLanguages() []string {
	return s.Languages
}

// GetCountries returns the value of Countries.
func (s *MovieMetadata) GetCountries() []string {
	return s.Countries
}

// SetTitle sets the value of Title.
func (s *MovieMetadata) SetTitle(val string) {
	s.Title = val
}

// SetOriginalTitle sets the value of OriginalTitle.
func (s *MovieMetadata) SetOriginalTitle(val NilString) {
	s.OriginalTitle = val
}

// SetOverview sets the value of Overview.
func (s *MovieMetadata) SetOverview(val NilString) {
	s.Overview = val
}

// SetReleaseDate sets the value of ReleaseDate.
func (s *MovieMetadata) SetReleaseDate(val time.Time) {
	s.ReleaseDate = val
}

// SetVoteRating sets the value of VoteRating.
func (s *MovieMetadata) SetVoteRating(val float64) {
	s.VoteRating = val
}

// SetImages sets the value of Images.
func (s *MovieMetadata) SetImages(val []Image) {
	s.Images = val
}

// SetGenres sets the value of Genres.
func (s *MovieMetadata) SetGenres(val []string) {
	s.Genres = val
}

// SetCast sets the value of Cast.
func (s *MovieMetadata) SetCast(val []CastMember) {
	s.Cast = val
}

// SetLanguages sets the value of Languages.
func (s *MovieMetadata) SetLanguages(val []string) {
	s.Languages = val
}

// SetCountries sets the value of Countries.
func (s *MovieMetadata) SetCountries(val []string) {
	s.Countries = val
}

// NewNilMediaMeta returns new NilMediaMeta with value set to v.
func NewNilMediaMeta(v MediaMeta) NilMediaMeta {
	return NilMediaMeta{
		Value: v,
	}
}

// NilMediaMeta is nullable MediaMeta.
type NilMediaMeta struct {
	Value MediaMeta
	Null  bool
}

// SetTo sets value to v.
func (o *NilMediaMeta) SetTo(v MediaMeta) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilMediaMeta) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilMediaMeta) SetToNull() {
	o.Null = true
	var v MediaMeta
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilMediaMeta) Get() (v MediaMeta, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilMediaMeta) Or(d MediaMeta) MediaMeta {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptImage returns new OptImage with value set to v.
func NewOptImage(v Image) OptImage {
	return OptImage{
		Value: v,
		Set:   true,
	}
}

// OptImage is optional Image.
type OptImage struct {
	Value Image
	Set   bool
}

// IsSet returns true if OptImage was set.
func (o OptImage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptImage) Reset() {
	var v Image
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptImage) SetTo(v Image) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptImage) Get() (v Image, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptImage) Or(d Image) Image {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Repository
type Repository struct {
	// The repository ID, alphanumeric, lowercase, non-blank ([a-z0-9-_]).
	ID string `json:"id"`
	// The repository name.
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *Repository) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *Repository) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *Repository) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Repository) SetName(val string) {
	s.Name = val
}

func (*Repository) getRepoByIdRes() {}

// Merged schema.
// Ref: #/components/schemas/SeriesMetadata
type SeriesMetadata struct {
	// The media title.
	Title string `json:"title"`
	// The media title as it was initially released (original language).
	OriginalTitle NilString `json:"original_title"`
	// The media plot overview.
	Overview NilString `json:"overview"`
	// The media initial release date and time.
	ReleaseDate time.Time `json:"release_date"`
	// The media like/dislike ratio.
	VoteRating float64 `json:"vote_rating"`
	// The promotional images of the media.
	Images []Image `json:"images"`
	// The media's genres.
	Genres []string `json:"genres"`
	// The people casted in the media.
	Cast []CastMember `json:"cast"`
	// The languages originally spoken in the media.
	Languages []string `json:"languages"`
	// The countries that took part in producing the media.
	Countries []string `json:"countries"`
}

// GetTitle returns the value of Title.
func (s *SeriesMetadata) GetTitle() string {
	return s.Title
}

// GetOriginalTitle returns the value of OriginalTitle.
func (s *SeriesMetadata) GetOriginalTitle() NilString {
	return s.OriginalTitle
}

// GetOverview returns the value of Overview.
func (s *SeriesMetadata) GetOverview() NilString {
	return s.Overview
}

// GetReleaseDate returns the value of ReleaseDate.
func (s *SeriesMetadata) GetReleaseDate() time.Time {
	return s.ReleaseDate
}

// GetVoteRating returns the value of VoteRating.
func (s *SeriesMetadata) GetVoteRating() float64 {
	return s.VoteRating
}

// GetImages returns the value of Images.
func (s *SeriesMetadata) GetImages() []Image {
	return s.Images
}

// GetGenres returns the value of Genres.
func (s *SeriesMetadata) GetGenres() []string {
	return s.Genres
}

// GetCast returns the value of Cast.
func (s *SeriesMetadata) GetCast() []CastMember {
	return s.Cast
}

// GetLanguages returns the value of Languages.
func (s *SeriesMetadata) GetLanguages() []string {
	return s.Languages
}

// GetCountries returns the value of Countries.
func (s *SeriesMetadata) GetCountries() []string {
	return s.Countries
}

// SetTitle sets the value of Title.
func (s *SeriesMetadata) SetTitle(val string) {
	s.Title = val
}

// SetOriginalTitle sets the value of OriginalTitle.
func (s *SeriesMetadata) SetOriginalTitle(val NilString) {
	s.OriginalTitle = val
}

// SetOverview sets the value of Overview.
func (s *SeriesMetadata) SetOverview(val NilString) {
	s.Overview = val
}

// SetReleaseDate sets the value of ReleaseDate.
func (s *SeriesMetadata) SetReleaseDate(val time.Time) {
	s.ReleaseDate = val
}

// SetVoteRating sets the value of VoteRating.
func (s *SeriesMetadata) SetVoteRating(val float64) {
	s.VoteRating = val
}

// SetImages sets the value of Images.
func (s *SeriesMetadata) SetImages(val []Image) {
	s.Images = val
}

// SetGenres sets the value of Genres.
func (s *SeriesMetadata) SetGenres(val []string) {
	s.Genres = val
}

// SetCast sets the value of Cast.
func (s *SeriesMetadata) SetCast(val []CastMember) {
	s.Cast = val
}

// SetLanguages sets the value of Languages.
func (s *SeriesMetadata) SetLanguages(val []string) {
	s.Languages = val
}

// SetCountries sets the value of Countries.
func (s *SeriesMetadata) SetCountries(val []string) {
	s.Countries = val
}
